{"reviews": [{"regex": "\\.format", "rate": "suggestion", "id": 1, "pos_regex": "'[^']+'\\w*\\+", "comment": "\u8fd9\u91cc\u9664\u4e86\u4f7f\u7528 `+` \u8fd0\u7b97\u7b26\u5c06\u5b57\u7b26\u4e32\u7ed3\u5408\u8d77\u6765\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 `format` \u8bed\u6cd5\uff0c\u5b83\u80fd\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u5bb9\u6613\u7ef4\u62a4\r\n\r\n## \u4f8b\u5b50\ud83c\udf30  \r\n```\r\nvalue_1 = \"apple\"\r\nvalue_2 = \"banana\"\r\ntemplate = \"example: this is {0}, and this is {1}\"\r\n\r\nprint template.format(value_1, value_2) \r\n#\u8f93\u51fa\uff1a example: this is apple, and this is banana\r\n```\r\n\r\n\r\n\u4f7f\u7528 `format` \u7684\u597d\u5904\u5728\u4e8e\u80fd\u591f\u5c06 **\u5b57\u7b26\u4e32** \u7684\u6a21\u677f\u8ddf **\u503c** \u5206\u79bb\uff0c\u4e0d\u7528\u50cf\u4f7f\u7528 `+` \u8bed\u6cd5\u90a3\u6837\u63c9\u5408\u5728\u4e00\u8d77\uff0c\u80fd\u6709\u66f4\u597d\u7684\u6d41\u901a\u6027\r\n\r\n### \u8be6\u7ec6\u7684 format \u8bed\u6cd5\u4f7f\u7528\uff0c\u53c2\u8003\uff1a\r\n- [Using % and .format() for great good!](https://pyformat.info/)", "description": "\u5efa\u8bae\uff1aformat \u8bed\u6cd5", "is_missed": true, "isMatch": true}, {"regex": "'''|^#", "rate": "awesome", "id": 0, "pos_regex": "", "comment": "\u4e3a\u6bcf\u4e00\u4e2a\u51fd\u6570\u90fd\u5199\u4e0b\u4e86\u826f\u597d\u7684\u6ce8\u91ca\uff0c\u8ba9\u4ee3\u7801\u9605\u8bfb\u8005\u80fd\u8fc5\u901f\u7406\u89e3\u4ee3\u7801\u610f\u601d, \u505a\u5f97\u5f88\u68d2!\r\n\r\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u6309\u7167 [Python \u8bed\u8a00\u98ce\u683c\u89c4\u8303](http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/#comments) \u5199\u5f97\u66f4\u52a0\u89c4\u8303\u4e00\u4e9b, \u8b6c\u5982\uff1a\r\n```python\r\n  def some_function():\r\n  \"\"\"Example function with PEP 484 type annotations.\r\n\r\n    Args:\r\n        param1: The first parameter.\r\n        param2: The second parameter.\r\n    Behavior:\r\n        Makes the coffee\r\n    Returns:\r\n        The return value. True for success, False otherwise.\r\n  \"\"\"\r\n```\r\n\r\n### \u53c2\u8003\r\n- [Python \u8bed\u8a00\u98ce\u683c\u89c4\u8303](http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/#comments)", "description": "\u8d5e\uff1a\u826f\u597d\u7684\u6ce8\u91ca", "is_missed": false, "isMatch": true}, {"regex": "\"None\"", "rate": "suggestion", "id": 5, "pos_regex": "", "comment": "\u5bf9\u4e8e\u91cd\u590d\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e58\u53f7 `*` \u5c06\u5b83\u91cd\u590d\u8fde\u63a5\uff1a\r\n\r\n\u4f8b\u5982\uff1a\r\n```\r\nprint '-'*10 + '\\n'\r\n#----------\\n\r\n```", "description": "\u5efa\u8bae\uff1a\u91cd\u590d\u7684\u5b57\u7b26\u4e32", "is_missed": false, "isMatch": true}, {"regex": "\\.strip\\(\\)", "is_missed": true, "comment": "\u4ee5\u9632\u7528\u6237\u4e0d\u5c0f\u5fc3\u5728\u9996\u5c3e\u591a\u8f93\u5165\u4e86\u4e00\u4e9b\u7a7a\u683c\r\n\r\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u6d88\u9664\u7528\u6237\u8f93\u5165\u5185\u5bb9\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u591a\u8f93\u5165\u7684 **\u7a7a\u683c** \u6216\u8005 \u7f29\u8fdb`\\t`\r\n\r\n\u4f7f\u7528 `.strip()` \u65b9\u6cd5\uff0c\u4f8b\u5b50\ud83c\udf30  \uff1a\r\n```\r\ns = \"  \\t a string example\\t  \"\r\ns = s.strip()\r\n#a string example\r\n```\r\n\r\n## \u53c2\u8003\uff1a\r\n- [How to trim whitespace (including tabs)?](https://stackoverflow.com/questions/1185524/how-to-trim-whitespace-including-tabs)", "rate": "suggestion", "pos_regex": "raw_input", "description": "\u5efa\u8bae: \u53bb\u9664\u7a7a\u683c", "id": 4, "isMatch": true}, {"regex": "[^ ]=[^ ]", "is_missed": false, "isMatch": true, "comment": "# \u5efa\u8bae 1 \u2728  \r\n---------\r\n \u5982 [PEP 8](https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements) Python \u98ce\u683c\u6307\u5357\u6240\u63a8\u8350\uff1a\r\n> Always surround these binary operators with a single space on either side: assignment ( = ), augmented assignment ( += , -= etc.), comparisons ( == , < , > , != , <> , <= , >= , in , not in , is , is not ), Booleans ( and , or , not ).\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u5728\u8fd0\u7b97\u7b26\u7684\u5de6\u53f3\u4e24\u8fb9\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u5bb9\u6613\u9605\u8bfb\u548c\u7406\u89e3\uff1a\r\n\r\n### \u63a8\u8350\uff1a\r\n```\r\ni = i + 1\r\nsubmitted += 1\r\na <= b\r\n```\r\n\r\n### \u4e0d\u63a8\u8350\r\n```\r\ni=i+1\r\nsubmitted+=1\r\na<=b\r\n```\r\n\r\n### \u53c2\u8003\r\n- [Style Guide for Python Code](https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements) ", "rate": "suggestion", "pos_regex": "", "description": "\u5efa\u8bae\uff1a\u8fd0\u7b97\u7b26\u52a0\u4e2a\u7a7a\u683c\uff0c\u5bb9\u6613\u9605\u8bfb\u4e9b", "id": 3}, {"regex": "=.*'.{80,}'", "is_missed": false, "isMatch": true, "comment": "\u6839\u636e [PEP-0008](https://www.python.org/dev/peps/pep-0008/#maximum-line-length)\uff0c\u6700\u597d\u4fdd\u6301\u6bcf\u884c\u5c0f\u4e8e80\u4e2a\u5b57\u7b26 (\u5305\u542b\u7f29\u8fdb) \u3002\r\n\r\n\u5bf9\u4e8e\u6bd4\u8f83\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 `\\` \u548c `\"` \u5c06\u5176\u5206\u6210\u591a\u884c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u5bb9\u6613\u9605\u8bfb\uff0c\u5982\uff1a\r\n\r\n```\r\nmessage = \"this is an example: hello\"\\\r\n          \" world\"\r\n\r\nprint message\r\n#this is an example: hello world\r\n```", "rate": "suggestion", "pos_regex": "", "description": "\u5efa\u8bae\uff1a\u5b57\u7b26\u4e32\u592a\u957f", "id": 2}, {"regex": "", "is_missed": false, "isMatch": false, "comment": "\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u5b57\u5178\u6765\u5b58\u50a8\u9898\u76ee\u548c\u76f8\u5e94\u7684\u7b54\u6848\uff1a\r\n\r\n```\r\ngame_data = {\r\n   'easy': {\r\n        'quiz': 'paragraph here...',\r\n        'answers': ['a', 'b', 'c']\r\n    },\r\n   'medium': {\r\n        'quiz': 'paragraph here...',\r\n        'answers': ['a', 'b', 'c']\r\n    },\r\n   'hard': {\r\n        'quiz': 'paragraph here...',\r\n        'answers': ['a', 'b', 'c']\r\n    }\r\n}\r\n```\r\n\r\n\u5f53\u4f60\u83b7\u5f97\u4e86\u7528\u6237\u8f93\u5165\u5185\u5bb9\u540e\uff0c\u4f60\u5c06\u80fd\u591f\u975e\u5e38\u5bb9\u6613\u7684\u8fdb\u884c\u76f8\u5e94\u5904\u7406\uff1a\r\n```\r\nlevel = raw_input('Please enter a level');\r\nquestion = game_data[level]['quiz'] #\u83b7\u53d6\u76f8\u5e94 level \u7684\u95ee\u9898\r\nanswer = game_data[level]['answers'] #\u83b7\u53d6\u76f8\u5e94 level \u7684\u7b54\u6848\r\n```", "rate": "suggestion", "pos_regex": "", "description": "\u5efa\u8bae\uff1a\u4f7f\u7528\u5b57\u5178\u6765\u5b58\u9898\u76ee", "id": 6}]}